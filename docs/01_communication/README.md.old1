# Communication

All data communication with the Fluvius Smart Meter runs via the `P1 port`.

## Hardware

### Physical connection

The P1 port is a serial interface that uses a standard RJ12 connector.

![Image](./images/image1.png)

| Pin | Signal name         |
|-----|---------------------|
| 1   | + 5V (Power supply) |
| 2   | Data request        |
| 3   | Data GND (ground)   |
| 4   | Not connected       |
| 5   | Data                |
| 6   | GND (ground)        |

> **Safety**
>
> In order to protect both the user and the Fluvius Smart Meter the P1 port is galvanically isolated from the mains.
>
> ![Image](./images/image2.png)

### +5V Power supply

The P1 interface provides a stable +5V DC power supply via "+5V" (pin 1) and "GND"(pin 6) lines to provide a connected IoT device with a power source.

U = 5,0 V ( max = 5,5 V with I = 0 mA , min = 4,9 V with I = 250 mA )

### Data request

The P1 port is activated (will start sending data) by setting "Data request" (pin 2) high (4,0V to 5,5V). While recieving data, this line must be kept high.

::: warning Warning
To stop receiving data the "Data request" line must be put in a high impedance mode and must not be connected to the GND or 0V
:::

### Data

Here we run into our first problem. Due to the use of optocouplers, the "Data" (pin 5) line must be designed as an **Open Collector** output and must be **logically inverted** before it can be used with IoT device ( Raspberri Pi, ESP32, Arduino, ...).

A "Data" line LOW has a voltage of 0,2 V (0 - 1V), HIGH has a voltage of 5,0V with a maximum current of 30 mA.

The solution is either to use a pre-made cable like for instance [this one](https://www.sossolutions.nl/slimme-meter-kabel), or to provide the signal inversion yourself.

![Image](./images/image3.png)



Hier nog iets doen omtrent de spaningsdeler om van +5V naar +3,3V te gaan voor RBPI of naar andere spanningen voor andere bordjes




## Communication protocol

Here we run into our second problem. The P1 communication protocol of a Fluvius Smart Meter is based on the DSMR 5 standard used in the Netherlands but extended with the e-Mucs specifications. Therefore all solutions found on the internet for the Netherlands are not applicable for the Fluvius Smart Meter.

### The DSMR 5 protocol

The protocol is based on NEN-EN-IEC 62056-21 Mode D. Data transfer is requested with request line and automatically initiated every second until request line is released. The information in the P1 telegram must be updated every second.

![Image](./images/image4.png)

#### Transfert speed and character formatting

The interface must use a fixed transfer speed of 115200 baud. 

:: tip Note
Due to the 115200 baud-rate the max. cable length for this serial communication is 2,5 m.
:::

The Metering System must send its data to the OSM device every single second and the transmission of the entire P1 telegram must be completed within 1s.
The format of transmitted data must be defined as “8N1”. Namely:
- 1 start bit,
- 8 data bits,
- no parity bit and
- 1 stop bit.

#### Data readout

The Metering System transmits the data message, as described below, immediately following
the activation through the Request signal.

![Image](./images/image5.png)

One of the COSEM object attribute values in the data blocks could be used for firmware updates
or parameter update of a P1 device. Because of this it is not allowed to split the large
data block (which can contain up to 1024 characters).

CRC is a CRC16 value calculated over the preceding characters in the data message (from
“/” to “!” using the polynomial: x16+x15+x2+1). CRC16 uses no XOR in, no XOR out and is
computed with least significant bit first. The value is represented as 4 hexadecimal characters
(MSB first).

#### End of transmission

The data transmission is complete after the data message has been transmitted by the Metering
System. An acknowledgement signal is not provided for.

#### Representation of COSEM objects

IEC 62056-61 specifies the logical names of COSEM objects using OBIS, the Object Identification System. Value group F is not used. The following Value Formats are used for P1 Data Readout value representations:

| Value Format | Format/Example | Meaning |
|--------------|----------------|---------|
| Fn(x,y) | F7(3,3) - YYYY.YYY |  Floating decimal number with a fixed number of decimals behind the decimal point (in this case 3) |
| Fn(x,y) | F7(0,3) – YYYY.YYY or YYYYY.YY or YYYYYY.Y or YYYYYYY | Floating decimal number with a variable number of decimals behind the decimal point (with a maximum of 3) |
| In | I4 - YYYY | Integer number |
| Sn | S6 - CCCCCC | Alphanumeric string |
| TST | YYMMDDhhmmssX | ASCII presentation of Time stamp with Year, Month, Day, Hour, Minute, Second, and an indication whether DST is active (X=S) or DST is not active (X=W). |
Note: n is the number of characters in the string.

#### Representation of P1 telegram

The following table holds data objects represented with P1 Interface together with OBIS reference including object Attribute and Value Format for Reduced ID codes. Every line is ended with a CR/LF (Carriage Return / Line Feed).

Note:
The OBIS reference Channel number (n) will be defined by the installing order of the M-Bus devices. So for example a Gas meter can be installed on channel 1, 2, 3 or 4. For that reason the Device-Type is sent first to identify the medium on P1. A slave E-meter can also be an M-Bus device.

Only when a M-Bus device is installed, its data will be exported on the P1 interface. Values for L2 and L3 will only be available in a P1 telegram of a poly phase meter.

| Value | OBIS reference | Attribute | Class ID | Value format | Value unit |
|-------|----------------|-----------|----------|--------------|-----------|
| Header information | - | - | - | Manufacturer specific |  |
| Version information for P1 output | 1-3:0.2.8.255 | 2 | 1 Data | S2,tag 9 | |
| Date-time stamp of the P1 message | 0-0:1.0.0.255 | 2 | 8 | TST |YYMMDDhhmm ssX |
| Equipment identifier | 0-0:96.1.1.255 | 2 Value | 1 Data | Sn (n=0..96), tag 9 | |
| Meter Reading electricity delivered to client (Tariff 1) in 0,001 kWh | 1-0:1.8.1.255 | 2 Value | 3 Register | F9(3,3), tag 6 | kWh |
| Meter Reading electricity delivered to client (Tariff 2) in 0,001 kWh | 1-0:1.8.2.255 | 2 Value | 3 Register | F9(3,3), tag 6 | kWh |
| Meter Reading electricity delivered by client (Tariff 1) in 0,001 kWh | 1-0:2.8.1.255 | 2 Value | 3 Register | F9(3,3), tag 6 | kWh |
| Meter Reading electricity delivered by client (Tariff 2) in 0,001 kWh | 1-0:2.8.2.255 | 2 Value | 3 Register | F9(3,3), tag 6 | kWh |
| Tariff indicator electricity. The tariff indicator can also be used to switch tariff dependent loads e.g boilers. This is the responsibility of the P1 user | 0-0:96.14.0.255 | 2 Value | 1 Data | S4, tag 9 | |
| Actual electricity power delivered (+P) in 1 Watt resolution | 1-0:1.7.0.255 | 2 Value | 3 Register | F5(3,3), tag 18 | kW |
| Actual electricity power received (-P) in 1 Watt resolution | 1-0:2.7.0.255 | 2 Value | 3 Register | F5(3,3), tag 18 | kW |
| Number of power failures in any phase | 0-0:96.7.21.255 | 2 Value | 1 Data | F5(0,0), tag 18 | |
| Number of long power failures in any phase | 0-0:96.7.9.255 | 2 Value | 1 Data | F5(0,0), tag 18 | |
| Power Failure Event Log (long power failures) | 1-0:99.97.0.255 | 2 Buffer | 7 Profile Generic | TST, F10(0,0) - tag 6 Format applicable for the value within the log (OBIS code 0- 0:96.7.19.255) | Timestamp (end of failure) – duration in seconds |
| Number of voltage sags in phase L1 | 1-0:32.32.0.255 | 2 Value | 1 Data | F5(0,0), tag 18 | |
| Number of voltage sags in phase L2 | 1-0:52.32.0.255 | 2 Value | 1 Data | F5(0,0), tag 18 | |
| Number of voltage sags in phase L3 | 1-0:72.32.0.255 | 2 Value | 1 Data | F5(0,0), tag 18 | |
| Number of voltage swells in phase L1 | 1-0:32.36.0.255 | 2 Value | 1 Data | F5(0,0), tag 18 | |
| Number of voltage swells in phase L2 | 1-0:52.36.0.255 | 2 Value | 1 Data | F5(0,0), tag 18 | |
| Number of voltage swells in phase L3 | 1-0:72.36.0.255 | 2 Value | 1 Data | F5(0,0), tag 18 | |
| Text message max 1024 characters. | 0-0:96.13.0.255 | 2 Value | 1 Data | Sn (n=0..2048), tag 9 | |
| Instantaneous voltage L1 in V resolution | 1-0:32.7.0.255 | 2 Value | 3 Register | F4(1,1), tag 18 | V |
| Instantaneous voltage L2 in V resolution | 1-0:52.7.0.255 | 2 Value | 3 Register | F4(1,1), tag 18 | V |
| Instantaneous voltage L3 in V resolution | 1-0:72.7.0.255 | 2 Value | 3 Register | F4(1,1), tag 18 | V |
| Instantaneous current L1 in A resolution. | 1-0:31.7.0.255 | 2 Value | 3 Register | F3(0,0), tag 18 | A |
| Instantaneous current L2 in A resolution. | 1-0:51.7.0.255 | 2 Value | 3 Register | F3(0,0), tag 18 | A |
| Instantaneous current L3 in A resolution. | 1-0:71.7.0.255 | 2 Value | 3 Register | F3(0,0), tag 18 | A |
| Instantaneous active power L1 (+P) in W resolution | 1-0:21.7.0.255 | 2 Value | 3 Register | F5(3,3), tag 18 | kW |
| Instantaneous active power L2 (+P) in W resolution | 1-0:41.7.0.255 | 2 Value | 3 Register | F5(3,3), tag 18 | kW |
| Instantaneous active power L3 (+P) in W resolution | 1-0:61.7.0.255 | 2 Value | 3 Register | F5(3,3), tag 18 | kW |
| Instantaneous active power L1 (-P) in W resolution | 1-0:22.7.0.255 | 2 Value | 3 Register | F5(3,3), tag 18 | kW |
| Instantaneous active power L2 (-P) in W resolution | 1-0:42.7.0.255 | 2 Value | 3 Register | F5(3,3), tag 18 | kW | 
| Instantaneous active power L3 (-P) in W resolution | 1-0:62.7.0.255 | 2 Value | 3 Register | F5(3,3), tag 18 | kW |
| Device-Type | 0-n:24.1.0.255 | 9 Device type | 72 M-Bus client | F3(0,0), tag 17 | |
| Equipment identifier (Gas) | 0-n:96.1.0.255 | 2 Value | 1 Data | Sn (n=0..96), tag 9 | |
| Last 5-minute value (temperature converted), gas delivered to client in m3, including decimal values and capture time | 0-n:24.2.1.255 | 5 Capture time | 4 Extended Register | TST | |
| Last 5-minute value (temperature converted), gas delivered to client in m3, including decimal values and capture time | 0-n:24.2.1.255 | 2 Value | 4 Extended Register | F8(2,2)/F8(3,3), tag 18 (See note 2) | m3 |
| Device-Type | 0-n:24.1.0.255 | 9 Device type | 72 M-Bus client | F3(0,0), tag 17 | |
| Equipment identifier (Thermal: Heat or Cold) | 0-n:96.1.0.255 | 2 Value | 1 Data | Sn (n=0..96), tag 9 | |
| Last 5-minute Meter reading Heat or Cold in 0,01 GJ and capture time | 0-n:24.2.1.255 | 5 Capture time | 4 Extended Register | TST | |
| Last 5-minute Meter reading Heat or Cold in 0,01 GJ and capture time | 0-n:24.2.1.255 | 2 Value | 4 Extended Register | Fn(2,2) (See note 1) | GJ |
| Device-Type | 0-n:24.1.0.255 | 9 Device type | 72 M-Bus client | F3(0,0), tag 17 | |
| Equipment identifier (Water) | 0-n:96.1.0.255 | 2 Value | 1 Data | Sn (n=0..96), tag 9 | |
| Last 5-minute Meter reading in 0,001 m3 and capture time | 0-n:24.2.1.255 | 5 Capture time | 4 Extended Register | TST | |
| Last 5-minute Meter reading in 0,001 m3 and capture time | 0-n:24.2.1.255 | 2 Value | 4 Extended Register | Fn(3,3) (See Note 1) | m3 |
| Device-Type 0-n:24.1.0.255 | 9 Device type | 72 M-Bus client | F3(0,0), tag 17 | |
| Equipment identifier | 0-n:96.1.0.255 | 2 Value | 1 Data | Sn (n=0..96), tag 9 | |
| Last 5-minute Meter reading and capture time (e.g. slave E meter) | 0-n:24.2.1.255 | 5 Capture time | 4 Extended Register | TST | |
| Last 5-minute Meter reading and capture time (e.g. slave E meter) | 0-n:24.2.1.255 | 2 Value | 4 Extended Register | Fn(3,3) (See Note 1) | kWh |
Note 1: Where n is the number of digits before the decimal point on the display of the meter + the required number of decimals. So for example if on the physical display of a Heat meter is shown 1234 GJ (without decimals) the n=6 and the format of the P1 output will be 1234,56 GJ.

Note 2: For Gas meters with a capacity up to 10 m3/h (G4 and G6) F8(3,3) is applicable. For Gas meters with higher capacities F8(2,2) is applicable.

::: warning Warning
Be aware of the fact that the number of OBIS codes and the order of them is not fixed. Therefore the connected IoT device must be able to interpret the P1 telegram.
:::

### Data objects



Eventueel hier nog pag 26..28 toevoegen ??




Moet ik niet gewoon zeggen de dsmr is included idem voor e-mucs

Dan de het uiteindelijke resultaat alleen uitleggen ?






### The e-Mucs extention protocol


#### additional data objects



## Used sources

* [DSMR 5 standard](/files/dsmr5.pdf)
* [e-Mucs specification](/files/emucs.pdf)